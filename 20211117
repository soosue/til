되도록이면 모두 불변 객체로 만들어라(복잡도가 높은 코드에서 버그 가능성을 줄여준다.)
- 장점 : 복잡도가 높은 코드에서 해당 객체의 상태가 바뀔 것을 염려하지 않아도 된다.
- 단점 : 객체를 매번 생성해야해서 성능이 떨어진다. (캐싱전략을 쓸 수 있고, 정 안될 경우에 가변 객체로 바꾼다.)

원시값을 포장하라(기능이 분리되고, 메시지를 보낼 수 있다.)
일급컬렉션을 사용하라(기능이 분리되고, 메시지를 보낼 수 있다.)

값을 꺼내와서 사용하지 말고 메시지를 보내라(테스트할 수 있는 단위가 된다.)
- getter를 지양하자
- dto는 제외.

단순 위임하는 메서드는 테스트 코드를 작성하지 않아도 된다(해당 메서드 테스트 코드가 없어 불안할 것 같으면 작성해라 - 켄트벡)

생성자는 많을 수록 프로그래밍이 편리해진다(테스트 코드 작성도 포함.)
