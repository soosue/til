영속성 전이 CASCADE
- 특정 엔티티를 영속화하는데, 그 엔티티와 관련된 다른 엔티티도 같이 영속화 하고 싶을 때, 사용할 수 있는 방법이다.
- 일반적인 상황에서 부모-자식 관계를 가진 엔티티 사이에서 부모를 영속화하고, 자식을 영속화하는 순서대로 영속화가 진행된다. (총 3번 persist 호출)
- 영속성 전이를 사용하면, 부모를 영속화하면 자식들은 알아서 영속화가 진행된다. (실제로도 3번 호출, 코드 양만 줄어듬)

영속성 전이: 저장
- 부모(1, oneToMany, mappedBy)에서 cascade속성을 준다.
- 부모 엔티티에 자식 엔티티를 add하고, 자식 엔티티에 부모 엔티티를 넣어준 다음, 부모 엔티티를 영속화 하면, 자식 엔티티들은 알아서 영속화가 된다.
(*주의. 단순히 자식 엔티티를 따로 영속화 안해도 되는 편리함을 제공해주는 것이기 때문에 양쪽 다 set하는 것을 잊어서는 안된다.)

생각해보기
- 부모-자식 관계를 가졌다고 해서 mappedBy가 꼭 필요한 것은 아니다. (product 1 - * orderDetails의 관계에선 product가 부모지만, 양방향을 맺을 필요가 없다.)
- 따라서 cascade.persist가 꼭 필요한 것도 아니다. 필요한 상황은 유동적일 수 있다.
- cascade.remove의 경우를 생각해보면 product가 제거되면, orderDetails는 참조를 할 수 없으니 지워져야하는게 맞지만,
  지워지면 내역이 사라지게 되니 애당초 설계에서 product를 지우면 칼럼을 지우는 것이 아닌 별도의 칼럼을 두어 삭제여부를 관리하는 것이 옳다.

번외
- JPA 엔티티는 기본생성자가 꼭 필요하다.
