객체지향 프로그래밍을 해야 하는 이유
- 절차지향적 프로그래밍은 데이터와 프로세스가 별도의 클래스에 존재하여 의존도가 높다.
- 의존도가 높으면 변경에 어려움이 있는 설계가 된다.
- 객체지향적 프로그래밍을 하면 데이터를 가지고 있는 객체에 프로세스가 존재하게 되어 의존도를 낮추는 설계를 할 수 있게 된다.
- 결과적으로 변경을 두려워하지 않는 프로그래밍을 할 수 있게 된다.

리액트 props
- 부모 컴포넌트에서 자식 컴포넌트에게 데이터를 넘기는 방법.
- string, number, boolean, function... 등을 넘길 수 있다.
- 커스텀 컴포넌트에서 주는 속성값들 모두 props이다. ex) <Button text="저장", onClick={handleClick} />에서 text와 onClick.
- 함수형 컴포넌트의 첫번째 인자로 받을 수 있으며 Object로 넘어온다. ex) function Button(props) {}. props.text, props.onClick과 같이 사용.
